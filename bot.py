from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import random

bot = Bot(token="7864244507:AAEfNjZSVsN9NSdTOvxJrxhMSuUsuyURXFU")  # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
dp = Dispatcher(bot)

users = {}  # user_id: {"bank": 1000, "sequence": [100, 100]}

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    uid = message.from_user.id
    users[uid] = {"bank": 1000, "sequence": [100, 100]}
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à –±–∞–Ω–∫: 1000.\n–ì–æ—Ç–æ–≤—ã –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏ –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –§–∏–±–æ–Ω–∞—á—á–∏.")

@dp.message_handler(commands=["bet"])
async def bet(message: types.Message):
    uid = message.from_user.id
    if uid not in users:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ /start")
        return
    user = users[uid]
    seq = user["sequence"]
    if len(seq) < 2:
        seq = [100, 100]
    stake = seq[-1] + seq[-2]
    result = random.choice(["win", "lose"])
    if result == "win":
        user["bank"] += int(stake * 0.9)
        if len(seq) > 2:
            seq = seq[1:-1]
        else:
            seq = [100, 100]
        await message.answer(f"‚úÖ –ü–æ–±–µ–¥–∞!\n–°—Ç–∞–≤–∫–∞: {stake} ‚Üí –≤—ã–∏–≥—Ä—ã—à ~{int(stake*0.9)}\n–ù–æ–≤—ã–π –±–∞–Ω–∫: {user['bank']}")
    else:
        user["bank"] -= stake
        seq.append(stake)
        await message.answer(f"‚ùå –ü–æ—Ä–∞–∂–µ–Ω–∏–µ.\n–°—Ç–∞–≤–∫–∞: {stake}\n–ù–æ–≤—ã–π –±–∞–Ω–∫: {user['bank']}")
    user["sequence"] = seq

@dp.message_handler(commands=["status"])
async def status(message: types.Message):
    uid = message.from_user.id
    if uid not in users:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ /start")
        return
    user = users[uid]
    await message.answer(f"üí∞ –ë–∞–Ω–∫: {user['bank']}\nüîÅ –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {user['sequence']}")

@dp.message_handler(commands=["reset"])
async def reset(message: types.Message):
    uid = message.from_user.id
    users[uid] = {"bank": 1000, "sequence": [100, 100]}
    await message.answer("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ –±–∞–Ω–∫ —Å–±—Ä–æ—à–µ–Ω—ã.")

@dp.message_handler(commands=["help"])
async def help_cmd(message: types.Message):
    await message.answer("/start ‚Äì –Ω–∞—á–∞—Ç—å\n/bet ‚Äì —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É\n/status ‚Äì –±–∞–Ω–∫ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è\n/reset ‚Äì —Å–±—Ä–æ—Å\n/help ‚Äì –ø–æ–º–æ—â—å")

if __name__ == "__main__":
    executor.start_polling(dp)
